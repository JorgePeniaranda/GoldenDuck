generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Error {
  id            Int           @id @default(autoincrement())
  name          String?
  message       String?
  date          DateTime      @default(now())
}

enum role {
  ADMIN
  SUPPORT
  USER
}

enum sex {
  MALE
  FEMALE
}

model User {
  id            Int           @id @default(autoincrement())
  name          String
  lastName      String
  dni           BigInt
  email         String
  phoneNumber   BigInt
  password      String
  address       String
  birthDate     DateTime
  sex           sex
  updateAt      DateTime      @default(now())
  createAt      DateTime      @default(now())
  deleted       Boolean       @default(false)
  role          role          @default(USER)
  account       Account[]
  sessions      Session[]
}

model Session {
  id            Int           @id @default(autoincrement())
  idUser        Int
  ip            String?
  userAgent     String?
  createAt      DateTime      @default(now())
  user          User          @relation(fields: [idUser], references: [id])
}

model Account {
  id            Int           @id @default(autoincrement())
  idUser        Int
  balance       BigInt        @default(0)
  imgUrl        String?
  updateAt      DateTime      @default(now())
  createAt      DateTime      @default(now())
  deleted       Boolean       @default(false)
  user          User          @relation(fields: [idUser], references: [id])
  notifications Notification[]
  messages      Message[]
  cards         Card[]
  transactions  Transaction[]
  loans         Loan[]
  investments   Investment[]
}

model Message {
  id            Int           @id @default(autoincrement())
  idAccount     Int
  from          Int
  to            Int
  message       String
  read          Boolean       @default(false)
  date          DateTime      @default(now())
  account       Account       @relation(fields: [idAccount], references: [id])
}

model Notification {
  id            Int           @id @default(autoincrement())
  idAccount     Int
  message       String
  read          Boolean       @default(false)
  date          DateTime      @default(now())
  account       Account       @relation(fields: [idAccount], references: [id])
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String        @unique
}

model Card {
  id            Int           @id @default(autoincrement())
  idAccount     Int
  number        BigInt
  cvv           Int
  expiration    DateTime
  updateDate    DateTime      @default(now())
  deleted       Boolean       @default(false)
  account       Account       @relation(fields: [idAccount], references: [id])
}

model Transaction {
  id            Int           @id @default(autoincrement())
  idAccount     Int
  amount        BigInt
  category      String?
  date          DateTime      @default(now())
  account       Account       @relation(fields: [idAccount], references: [id])
}

model Loan {
  id            Int           @id @default(autoincrement())
  idAccount     Int
  amount        BigInt
  interest      Float
  date          DateTime      @default(now())
  date_end      DateTime
  account       Account       @relation(fields: [idAccount], references: [id])
}

model Investment {
  id            Int           @id @default(autoincrement())
  idAccount     Int
  amount        BigInt
  interest      Float
  date          DateTime      @default(now())
  date_end      DateTime
  account       Account       @relation(fields: [idAccount], references: [id])
}